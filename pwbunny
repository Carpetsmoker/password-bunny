#!/bin/sh
#
# password bunny: Manage passwords with Vim
#
# http://code.arp242.net/password-bunny
#
# Copyright © 2014-2016 Martin Tournoij <martin@arp242.net>
# See below for full copyright
#

set -e

version="1.3"

usage() {
	echo "Usage: $(basename "$0") [-vp] [-s file] [-c entryname] [file]"
	echo
	echo "  -h       Show this help"
	echo "  -v       Show version and exit"
	echo "  -c name  Find entry by name, copy it to the clipboard, and exit"
	echo "  -p       \"Private\" mode; don't show anything as the foldtext"
	echo "  -s       Specify location of pwbunny.vim; defaults to TODO"
	echo "  file     File to open, defaults to TODO"
	echo
}

private=""
getpwarg=""
while getopts ":c:hvp" option; do
	case $option in
		c)
			getpwarg="| call PwbunnyFindCopyClose('"$OPTARG"')"
			;;
		s)
			vimfile="$OPTARG"
			;;
		p)
			private="| call PwbunnySetPrivate()"
			;;
		h)
			usage
			exit 0
			;;
		v)
			echo "Pwbunny $version"
			exit 0
			;;
		?)
			usage
			exit 2
			;;
	esac
done
shift $((OPTIND - 1))

me=$(basename "$0")
root=$(dirname "$(readlink -f "$0")")
if [ ! -z "$1" ]; then
	file="$1"
elif [ -f "$HOME/.pwbunny/passwords.pwbunny" ]; then
	file="$HOME/.pwbunny/passwords.pwbunny"
elif [ -f "$root/passwords.pwbunny" ]; then
	file="$root/passwords.pwbunny"
else
	file="$HOME/.pwbunny/passwords.pwbunny"
fi

mkdir -p "$(dirname "$file")"

args=""
[ "$me" = gpwbunny ] && args=" -g --nofork "


# New file; adding -x to an already encrypted file will encrypt it twice!
if [ ! -f "$file" ]; then
	args=" -x "
# cm=zip
elif [ "$(head -c12 "$file")" = "VimCrypt~01!" ]; then
	echo "WARNING"
	echo "The file \`$file' either is encrypted using the old ZIP method"
	echo
	echo "THIS IS NOT SECURE, AND IS EASILY BROKEN!"
	echo 
	echo "To properly encrypt this file, use:"
	echo ":set cryptmethod=blowfish"
	echo ":w"
	echo
	echo "Press enter to continue"
	read x
# cm=blowfish
elif [ "$(head -c12 "$file")" = "VimCrypt~02!" ]; then
	echo "WARNING"
	echo "The file \`$file' uses cryptmethod=blowfish"
	echo
	echo "THIS IS NO LONGER SECURE!"
	echo
	echo "For details, see:"
	echo "https://groups.google.com/d/msg/vim_dev/D8FyRd0EwlE/bkBOo-hzTzoJ"
	echo 
	echo "To properly encrypt this file, use:"
	echo ":set cryptmethod=blowfish2"
	echo ":w"
	echo
	echo "Press enter to continue"
	read x
# File doesn't seem to be encrypted
elif [ "$(head -c12 "$file")" != "VimCrypt~03!" ]; then
	echo "WARNING"
	echo "The file \`$file' doesn't seem to be encrypted"
	echo
	echo "THIS IS NOT SECURE! ANYONE CAN READ YOUR PASSWORDS!"
	echo 
	echo "To properly encrypt this file, use these commands from Vim:"
	echo ":set cryptmethod=blowfish2"
	echo ":X"
	echo "[you will be asked for a password]"
	echo ":w"
	echo
	echo "Press enter to continue"
	read x
fi

vimfiles="/usr/share/pwbunny/pwbunny.vim \
	/usr/local/share/pwbunny/pwbunny.vim \
	/usr/pkg/share/pwbunny/pwbunny.vim \
	$root/../share/pwbunny/pwbunny.vim \
	$root/pwbunny.vim"

if [ -z "$vimfile" ]; then
	for f in $vimfiles; do
		if [ -f "$f" ]; then
			vimfile="$f"
			break
		fi
	done
fi

if [ -z "$vimfile" ]; then
	echo "Unable to find pwbunny.vim" >&2
	exit 3
fi

if [ -f "$file.bak" ]; then
	mv -vf "$file.bak" "$(dirname "$file")/.$(basename "$file").$(date +%s)"
fi

while :; do
	vim $args -n \
		-c "source $vimfile $getpwarg $private"  \
		"$file"

	[ $? -eq 0 ] && break

	clear
	echo "That seems to be the wrong password; press enter to try again, or ^C to abort"

	# Make sure we don't echo anything to the screen, in the case the user
	# enters the password here (as I did a few times...)
	# TODO: We really want to solve this better by allowing password input here
	stty -echo
	read x
	stty echo
done


# The MIT License (MIT)
#
# Copyright © 2014-2016 Martin Tournoij
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# The software is provided "as is", without warranty of any kind, express or
# implied, including but not limited to the warranties of merchantability,
# fitness for a particular purpose and noninfringement. In no event shall the
# authors or copyright holders be liable for any claim, damages or other
# liability, whether in an action of contract, tort or otherwise, arising
# from, out of or in connection with the software or the use or other dealings
# in the software.
